admin:
  address:
    socket_address:
      protocol: TCP
      address: 0.0.0.0
      port_value: 9901

static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address:
        protocol: TCP
        address: 0.0.0.0
        port_value: 15000
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          access_log:
          - name: envoy.access_loggers.stdout
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
          http_filters:
          # CORS 필터
          - name: envoy.filters.http.cors
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
          # Auth 필터 - 토큰 검증
          - name: envoy.filters.http.ext_authz
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
              transport_api_version: V3
              http_service:
                server_uri:
                  uri: http://auth-server:15001
                  cluster: auth_service
                  timeout: 2s
                path_prefix: /api/v1/verify
                authorization_request:
                  allowed_headers:
                    patterns:
                    - exact: authorization
                    - exact: content-type
                authorization_response:
                  allowed_upstream_headers:
                    patterns:
                    - exact: x-user-id
                    - exact: x-user-email
              failure_mode_allow: false
          # Router 필터
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              cors:
                allow_origin_string_match:
                - safe_regex:
                    regex: ".*"
                allow_methods: "GET, POST, PUT, DELETE, OPTIONS"
                allow_headers: "authorization, content-type, x-grpc-web, x-user-agent"
                expose_headers: "x-user-id, x-user-email"
                max_age: "86400"
              routes:
              # Gateway health check (먼저 매칭, 인증 제외)
              - match:
                  path: "/health"
                direct_response:
                  status: 200
                  body:
                    inline_string: "Gateway is running"
                response_headers_to_add:
                - header:
                    key: "Access-Control-Allow-Origin"
                    value: "*"
                - header:
                    key: "Access-Control-Allow-Methods"
                    value: "GET, POST, PUT, DELETE, OPTIONS"
                - header:
                    key: "Access-Control-Allow-Headers"
                    value: "authorization, content-type, x-grpc-web, x-user-agent"
                typed_per_filter_config:
                  envoy.filters.http.ext_authz:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                    disabled: true
              # 기본 응답
              - match:
                  prefix: "/"
                direct_response:
                  status: 404
                  body:
                    inline_string: "Gateway: Not Found"

  clusters:
  # Auth 서비스 클러스터 (검증용으로만 사용)
  - name: auth_service
    connect_timeout: 2s
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: auth_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: auth-server
                port_value: 15001
