services:
  postgres:
    image: postgres:15
    container_name: user-postgres
    environment:
      POSTGRES_DB: userdb
      POSTGRES_USER: asdf
      POSTGRES_PASSWORD: asdf
      PGPORT: 50001
    ports:
      - "50001:50001"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U asdf -d userdb -p 50001"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - asdf

  redis:
    image: redis:7-alpine
    container_name: user-redis
    command: redis-server --port 50002
    ports:
      - "50002:50002"
    volumes:
      - redis_data:/data
    networks:
      - asdf

  mongodb:
    image: mongo:7
    container_name: team-mongodb
    ports:
      - "50003:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=teamdb
    networks:
      - asdf

  auth-server:
    build:
      context: ./back/auth
      dockerfile: Dockerfile
    container_name: auth-server
    ports:
      - "15001:15001"
    environment:
      - DB_HOST=postgres
      - DB_PORT=50001
      - DB_USER=asdf
      - DB_PASSWORD=asdf
      - DB_NAME=userdb
      - REDIS_HOST=redis
      - REDIS_PORT=50002
      - JWT_SECRET=your-secret-key-here
      - PORT=15001
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - asdf

  user-server:
    build:
      context: ./back/services/user
      dockerfile: Dockerfile
    container_name: user
    ports:
      - "15002:15002"
    environment:
      - DB_HOST=postgres
      - DB_PORT=50001
      - DB_USER=asdf
      - DB_PASSWORD=asdf
      - DB_NAME=userdb
      - PORT=15002
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - asdf

  team-server:
    build:
      context: ./back/services/team
      dockerfile: Dockerfile
    container_name: team
    ports:
      - "15003:15003"
    environment:
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_DATABASE=teamdb
    depends_on:
      - mongodb
    networks:
      - asdf

  gateway:
    build:
      context: ./back/gateway
      dockerfile: Dockerfile
    container_name: envoy-gateway
    ports:
      - "15000:15000"  # API Gateway port
      - "9901:9901"    # Envoy admin port
    depends_on:
      - auth-server
      - user-server
      - team-server
    networks:
      - asdf


volumes:
  postgres_data:
  redis_data:
  mongodb_data:

networks:
  asdf:
    driver: bridge